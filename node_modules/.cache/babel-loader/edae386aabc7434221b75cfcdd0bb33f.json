{"ast":null,"code":"var _jsxFileName = \"/home/beatriz/Documents/bootcamp/aula14/src/TodoList.tsx\";\nimport React, { useEffect } from 'react';\nimport './style.css'; // import Redux Saga\n\nimport { useSelector, useDispatch } from 'react-redux'; //port { setID, setDone, setMessage } from './store/modules/todo/actions'\n\nimport { getTodosRequest, removeTodoRequest, changeTodoRequest } from './store/modules/todo/actions';\nimport Todo from './components/Todo';\n\nfunction RenderTodos() {\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todo.todos);\n  useEffect(() => {\n    dispatch(getTodosRequest());\n  }, []);\n\n  function handleDelete(id) {\n    alert(\"id to delete: \" + id);\n    dispatch(removeTodoRequest(id));\n  }\n\n  function changeStatus(id) {\n    alert(\"id to change: \" + id);\n    dispatch(changeTodoRequest(id));\n  }\n  /*function handleAdd() {\n      const newTodo = {\n          id: uuid(),\n          message: todo,\n          done: false\n      }\n      dispatch(removeTodoRequest(newTodo))\n  }*/\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"todoList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"TodoList\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(Todo, {\n    todo: todo,\n    handleDelete: handleDelete,\n    changeStatus: changeStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 40\n    }\n  }))));\n}\n\nexport default RenderTodos;","map":{"version":3,"sources":["/home/beatriz/Documents/bootcamp/aula14/src/TodoList.tsx"],"names":["React","useEffect","useSelector","useDispatch","getTodosRequest","removeTodoRequest","changeTodoRequest","Todo","RenderTodos","dispatch","todos","state","todo","handleDelete","id","alert","changeStatus","map"],"mappings":";AAAA,OAAOA,KAAP,IAA0BC,SAA1B,QAA0C,OAA1C;AAGA,OAAO,aAAP,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AAGA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,iBAA7C,QAAsE,8BAAtE;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;;AASA,SAASC,WAAT,GAAsB;AAClB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,KAAK,GAAGR,WAAW,CAAES,KAAD,IAA6BA,KAAK,CAACC,IAAN,CAAWF,KAAzC,CAAzB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;AACD,GAFM,EAEJ,EAFI,CAAT;;AAIA,WAASS,YAAT,CAAsBC,EAAtB,EAAkC;AAC9BC,IAAAA,KAAK,CAAC,mBAAmBD,EAApB,CAAL;AACAL,IAAAA,QAAQ,CAACJ,iBAAiB,CAACS,EAAD,CAAlB,CAAR;AACH;;AAED,WAASE,YAAT,CAAsBF,EAAtB,EAAkC;AAC9BC,IAAAA,KAAK,CAAC,mBAAmBD,EAApB,CAAL;AACAL,IAAAA,QAAQ,CAACH,iBAAiB,CAACQ,EAAD,CAAlB,CAAR;AACH;AAGD;;;;;;;;;;AASA,sBACI;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQJ,KAAK,CAACO,GAAN,CAAUL,IAAI,iBAAK,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,YAAY,EAAEC,YAAhC;AAA8C,IAAA,YAAY,EAAEG,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,CAFR,CAVJ,CADJ;AAqBH;;AAED,eAAeR,WAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { uuid } from 'uuidv4'\n\nimport './style.css'\n\n// import Redux Saga\nimport { useSelector, useDispatch } from 'react-redux'\n//port { setID, setDone, setMessage } from './store/modules/todo/actions'\nimport { ApplicationState } from './store'\n\nimport { getTodosRequest, removeTodoRequest, changeTodoRequest } from './store/modules/todo/actions'\n\nimport Todo from './components/Todo'\n\ninterface TodoData {\n    id: string,\n    message: string,\n    done: boolean\n}\n\n\nfunction RenderTodos(){\n    const dispatch = useDispatch()\n    const todos = useSelector((state: ApplicationState) => state.todo.todos)\n    \n    useEffect(() => {\n        dispatch(getTodosRequest())\n      }, [])\n      \n    function handleDelete(id: string) {\n        alert(\"id to delete: \" + id)\n        dispatch(removeTodoRequest(id))\n    }\n\n    function changeStatus(id: string) {\n        alert(\"id to change: \" + id)\n        dispatch(changeTodoRequest(id))\n    }\n\n\n    /*function handleAdd() {\n        const newTodo = {\n            id: uuid(),\n            message: todo,\n            done: false\n        }\n        dispatch(removeTodoRequest(newTodo))\n    }*/\n\n    return(\n        <div id=\"todoList\">\n            <h1>TodoList</h1>\n\n            {/*<div className=\"todoInput\">\n                <input type=\"text\" value={todo} onChange={e=>setTodo(e.target.value)} />\n                <button type=\"button\" \n                className=\"addTodo\"\n                onClick={addTodo}> Add</button>\n            </div>*/}\n\n            <div>\n                {\n                    todos.map(todo =>  <Todo todo={todo} handleDelete={handleDelete} changeStatus={changeStatus}/> )\n                }\n            </div>\n\n        </div>\n    )\n\n    \n}\n\nexport default RenderTodos"]},"metadata":{},"sourceType":"module"}