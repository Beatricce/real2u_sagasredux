{"ast":null,"code":"import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor\n});\nconst enhancer = process.env.NODE_ENV === 'development' ? compose(console.tron.createEnhancer(), applyMiddleware(sagaMiddleware)) : applyMiddleware(sagaMiddleware);\nconst store = createStore(rootReducer, enhancer);\nsagaMiddleware.run(rootSaga);\nexport { store };","map":{"version":3,"sources":["/home/beatriz/Documents/bootcamp/real2u_sagasredux/src/store/index.tsx"],"names":["applyMiddleware","compose","createStore","createSagaMiddleware","rootReducer","rootSaga","sagaMonitor","process","env","NODE_ENV","console","tron","createSagaMonitor","sagaMiddleware","enhancer","createEnhancer","store","run"],"mappings":"AAAA,SACIA,eADJ,EAEIC,OAFJ,EAGIC,WAHJ,QAMS,OANT;AAQE,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAaA,MAAMC,WAAW,GACfC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIC,OAAO,CAACC,IAAR,CAAaC,iBAAb,EADJ,GAEI,IAHN;AAKA,MAAMC,cAAc,GAAGV,oBAAoB,CAAC;AAAEG,EAAAA;AAAF,CAAD,CAA3C;AAEA,MAAMQ,QAAuB,GAC3BP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIR,OAAO,CAACS,OAAO,CAACC,IAAR,CAAaI,cAAb,EAAD,EAAgCf,eAAe,CAACa,cAAD,CAA/C,CADX,GAEIb,eAAe,CAACa,cAAD,CAHrB;AAKA,MAAMG,KAAY,GAAGd,WAAW,CAACE,WAAD,EAAcU,QAAd,CAAhC;AAEAD,cAAc,CAACI,GAAf,CAAmBZ,QAAnB;AAEA,SAASW,KAAT","sourcesContent":["import {\n    applyMiddleware,\n    compose,\n    createStore,\n    Store,\n    StoreEnhancer,\n  } from 'redux'\n  \n  import createSagaMiddleware from 'redux-saga'\n  \n  import rootReducer from './modules/rootReducer'\n  import rootSaga from './modules/rootSaga'\n  import { TodoState } from './modules/todo/types'\n  \n  export interface ApplicationState {\n    todo: TodoState\n  }\n  \n  declare global {\n    interface Console {\n        tron: any\n    }\n  }\n  \n  const sagaMonitor =\n    process.env.NODE_ENV === 'development'\n      ? console.tron.createSagaMonitor()\n      : null\n  \n  const sagaMiddleware = createSagaMiddleware({ sagaMonitor })\n  \n  const enhancer: StoreEnhancer =\n    process.env.NODE_ENV === 'development'\n      ? compose(console.tron.createEnhancer(), applyMiddleware(sagaMiddleware))\n      : applyMiddleware(sagaMiddleware)\n  \n  const store: Store = createStore(rootReducer, enhancer)\n  \n  sagaMiddleware.run(rootSaga)\n  \n  export { store }\n  "]},"metadata":{},"sourceType":"module"}