{"ast":null,"code":"var _jsxFileName = \"/home/beatriz/Documents/bootcamp/aula14/src/TodoList.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport './style.css'; // imports Redux Saga\n\nimport { useSelector, useDispatch } from 'react-redux'; //port { setID, setDone, setMessage } from './store/modules/todo/actions'\n\nimport { getTodosRequest, removeTodoRequest, changeTodoRequest, addTodoRequest } from './store/modules/todo/actions';\nimport Todo from './components/Todo';\n\nfunction RenderTodos() {\n  const [todoList, setTodoList] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  useEffect(() => {\n    const todos = localStorage.getItem(\"todoList\");\n\n    if (todos) {\n      setTodoList(JSON.parse(todos));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('todoList', JSON.stringify(todoList));\n  }, [todoList]);\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todo.todos);\n  useEffect(() => {\n    dispatch(getTodosRequest());\n  }, []);\n\n  function handleDelete(id) {\n    alert(\"id to delete: \" + id);\n    dispatch(removeTodoRequest(id));\n  }\n\n  function changeStatus(id) {\n    alert(\"id to change: \" + id);\n    dispatch(changeTodoRequest(id));\n  }\n\n  function handleAdd() {\n    dispatch(addTodoRequest(todo));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"todoList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"TodoList\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: todo,\n    onChange: e => setTodo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"addTodo\",\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \" Add\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(Todo, {\n    todo: todo,\n    handleDelete: handleDelete,\n    changeStatus: changeStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 40\n    }\n  }))));\n}\n\nexport default RenderTodos;","map":{"version":3,"sources":["/home/beatriz/Documents/bootcamp/aula14/src/TodoList.tsx"],"names":["React","useState","useEffect","useSelector","useDispatch","getTodosRequest","removeTodoRequest","changeTodoRequest","addTodoRequest","Todo","RenderTodos","todoList","setTodoList","todo","setTodo","todos","localStorage","getItem","JSON","parse","setItem","stringify","dispatch","state","handleDelete","id","alert","changeStatus","handleAdd","e","target","value","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AAGA,OAAO,aAAP,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AAGA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,iBAA7C,EAAgEC,cAAhE,QAAqF,8BAArF;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;;AASA,SAASC,WAAT,GAAsB;AAElB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAa,EAAb,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;;AACA,QAAGF,KAAH,EAAS;AACLH,MAAAA,WAAW,CAACM,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAD,CAAX;AACH;AACJ,GALQ,EAKN,EALM,CAAT;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,YAAY,CAACI,OAAb,CAAqB,UAArB,EAAiCF,IAAI,CAACG,SAAL,CAAeV,QAAf,CAAjC;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,QAAMW,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMW,KAAK,GAAGZ,WAAW,CAAEoB,KAAD,IAA6BA,KAAK,CAACV,IAAN,CAAWE,KAAzC,CAAzB;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,QAAQ,CAACjB,eAAe,EAAhB,CAAR;AACD,GAFM,EAEJ,EAFI,CAAT;;AAIA,WAASmB,YAAT,CAAsBC,EAAtB,EAAkC;AAC9BC,IAAAA,KAAK,CAAC,mBAAmBD,EAApB,CAAL;AACAH,IAAAA,QAAQ,CAAChB,iBAAiB,CAACmB,EAAD,CAAlB,CAAR;AACH;;AAED,WAASE,YAAT,CAAsBF,EAAtB,EAAkC;AAC9BC,IAAAA,KAAK,CAAC,mBAAmBD,EAApB,CAAL;AACAH,IAAAA,QAAQ,CAACf,iBAAiB,CAACkB,EAAD,CAAlB,CAAR;AACH;;AAGD,WAASG,SAAT,GAAqB;AAEjBN,IAAAA,QAAQ,CAACd,cAAc,CAACK,IAAD,CAAf,CAAR;AACH;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEA,IAA1B;AAAgC,IAAA,QAAQ,EAAEgB,CAAC,IAAEf,OAAO,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AACA,IAAA,SAAS,EAAC,SADV;AAEA,IAAA,OAAO,EAAEH,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CAHJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQb,KAAK,CAACiB,GAAN,CAAUnB,IAAI,iBAAK,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,YAAY,EAAEW,YAAhC;AAA8C,IAAA,YAAY,EAAEG,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,CAFR,CAVJ,CADJ;AAqBH;;AAED,eAAejB,WAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { uuid } from 'uuidv4'\n\nimport './style.css'\n\n// imports Redux Saga\nimport { useSelector, useDispatch } from 'react-redux'\n//port { setID, setDone, setMessage } from './store/modules/todo/actions'\nimport { ApplicationState } from './store'\n\nimport { getTodosRequest, removeTodoRequest, changeTodoRequest, addTodoRequest} from './store/modules/todo/actions'\n\nimport Todo from './components/Todo'\n\ninterface TodoData {\n    id: string,\n    message: string,\n    done: boolean\n}\n\n\nfunction RenderTodos(){\n\n    const [todoList, setTodoList] = useState<TodoData[]>([])\n    const [todo, setTodo] = useState(\"\")\n\n    useEffect(() => {\n        const todos = localStorage.getItem(\"todoList\")\n        if(todos){\n            setTodoList(JSON.parse(todos))\n        }\n    }, [])\n    \n    useEffect(() => {\n        localStorage.setItem('todoList', JSON.stringify(todoList))\n    }, [todoList])\n    \n    const dispatch = useDispatch()\n    const todos = useSelector((state: ApplicationState) => state.todo.todos)\n\n    \n    \n    useEffect(() => {\n        dispatch(getTodosRequest())\n      }, [])\n      \n    function handleDelete(id: string) {\n        alert(\"id to delete: \" + id)\n        dispatch(removeTodoRequest(id))\n    }\n\n    function changeStatus(id: string) {\n        alert(\"id to change: \" + id)\n        dispatch(changeTodoRequest(id))\n    }\n\n\n    function handleAdd() {\n\n        dispatch(addTodoRequest(todo))\n    }\n\n    return(\n        <div id=\"todoList\">\n            <h1>TodoList</h1>\n\n            <div className=\"todoInput\">\n                <input type=\"text\" value={todo} onChange={e=>setTodo(e.target.value)} />\n                <button type=\"button\" \n                className=\"addTodo\"\n                onClick={handleAdd}> Add</button>\n            </div>\n\n            <div>\n                {\n                    todos.map(todo =>  <Todo todo={todo} handleDelete={handleDelete} changeStatus={changeStatus}/> )\n                }\n            </div>\n\n        </div>\n    )\n\n    \n}\n\nexport default RenderTodos"]},"metadata":{},"sourceType":"module"}